{"name":"Xvfbwrapper","body":"# xvfbwrapper\r\n\r\nPython wrapper for running a display inside X virtual framebuffer (Xvfb)\r\n\r\n* Home: http://cgoldberg.github.com/xvfbwrapper\r\n* PyPI: http://pypi.python.org/pypi/xvfbwrapper\r\n* Dev: https://github.com/cgoldberg/xvfbwrapper\r\n\r\n***\r\n\r\n### Install xvfbwrapper from PyPI\r\n\r\n    pip install xvfbwrapper\r\n\r\n### About Xvfb (X Virtual Framebuffer)\r\n\r\nIn the X Window System, Xvfb or X virtual framebuffer is an X11 server that performs all graphical operations in memory, not showing any screen output. This virtual server does not require the computer it is running on to even have a screen or any input device. Only a network layer is necessary.\r\n\r\n***\r\n\r\n### System Requirements\r\n\r\n* Xvfb (`sudo apt-get install xvfb`, or similar)\r\n* Python 2\r\n\r\n***\r\n\r\n### Example: Basic Usage\r\n\r\n    from xvfbwrapper import Xvfb\r\n    \r\n    vdisplay = Xvfb()\r\n    vdisplay.start()\r\n    \r\n    # launch stuff inside virtual display here\r\n\r\n    vdisplay.stop()\r\n\r\n***\r\n\r\n### Example: Headless Selenium WebDriver Tests\r\n    #!/usr/bin/env python\r\n    \r\n    from selenium import webdriver\r\n    from xvfbwrapper import Xvfb\r\n    \r\n    import unittest\r\n\r\n\r\n    class TestHomepages(unittest.TestCase):\r\n        def setUp(self):\r\n            self.vdisplay = Xvfb(width=1280, height=720)\r\n            self.vdisplay.start()\r\n            self.browser = webdriver.Firefox()\r\n    \r\n        def testUbuntuHomepage(self):\r\n            self.browser.get('http://www.ubuntu.com')\r\n            self.assertIn('Ubuntu', self.browser.title)\r\n    \r\n        def testGoogleHomepage(self):\r\n            self.browser.get('http://www.google.com')\r\n            self.assertIn('Google', self.browser.title)\r\n    \r\n        def tearDown(self):\r\n            self.browser.quit()\r\n            self.vdisplay.stop()\r\n    \r\n    \r\n    if __name__ == '__main__':\r\n        unittest.main(verbosity=2)\r\n\r\nThis code uses `selenium` and `xvfbwrapper` to run a test with Firefox inside a Headless display.\r\n\r\n* install selenium bindings: `pip install selenium`\r\n* Firefox will launch inside virtual display (headless)\r\n* browser is not shown while tests are run\r\n\r\n***\r\n","google":"","tagline":"Python wrapper for Xvfb","note":"Don't delete this file! It's used internally to help with page regeneration."}